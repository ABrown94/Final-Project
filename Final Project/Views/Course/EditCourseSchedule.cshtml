@model Final_Project.Models.EditScheduleViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-group form-inline">
        <h4>Edit Schedule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
           
        string[] days = new string[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" };
        foreach (var day in days)
        {         
            if (Model.Schedule.Exists(m => m.DayOfWeek == day))
            {                                                           
                <input type="checkbox" name="selectedDays" value=@day checked />@day<br />
            }
            else
            {
                <input type="checkbox" name="selectedDays" value=@day />@day<br />
            }
        }
}
        <p class="text-danger" id="checkWarning" ></p>

        <div class="form-group">
            @Html.LabelFor(model => model.Schedule.First().StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Schedule.First().StartTime, new { htmlAttributes = new { onblur = "startTimeCheck()", @class = "form-control", @name = "startTime", @id = "start" } })
                <p class="text-danger" id="startWarning"> </p>
                @Html.ValidationMessageFor(model => model.Schedule.First().StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Schedule.First().EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Schedule.First().EndTime, new { htmlAttributes = new { onblur = "endTimeCheck()", @class = "form-control", @name = "endTime", @id = "end" } })
                <p class="text-danger" id="endWarning"> </p>
                @Html.ValidationMessageFor(model => model.Schedule.First().EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="sb" onclick="return testCheck()" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var startTimeCheck = (function () {
        var re = new RegExp('(?:0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]')
        var startTime = $("#start").val();
        if(startTime.match(re))
        {
            $(":submit").removeAttr("disabled");
            $("#startWarning").html("");
        }
        else {
            $(":submit").attr("disabled", true);
            $("#startWarning").html("Invalid time format");
        }        
    });

    var endTimeCheck = (function () {
        var re = new RegExp('(?:0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9]')
        var endTime = $("#end").val();
        if (endTime.match(re)) {
            $(":submit").removeAttr("disabled");
            $("#endWarning").html("");
        }
        else {
            $(":submit").attr("disabled", true);
            $("#endWarning").html("Invalid time format");

        }
    });
    

    function testCheck() {
        var checkBoxes = document.getElementsByName('selectedDays');
        var isChecked = false;
        for (var i = 0; i < checkBoxes.length; i++) {
            if (checkBoxes[i].checked) {
                isChecked = true;
            };
        };
        if (isChecked) {
            return true;
        } else {
            $("#checkWarning").html("Please select course days");
            return false;
        }
    }

</script>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
